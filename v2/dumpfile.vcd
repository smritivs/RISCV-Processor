$date
	Thu Jan 23 19:18:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! result [31:0] $end
$var reg 1 " clk $end
$var reg 1 # rst $end
$scope module dut $end
$var wire 1 " clk $end
$var wire 5 $ rd_d_i [4:0] $end
$var wire 5 % rd_e_i [4:0] $end
$var wire 5 & rd_w_i [4:0] $end
$var wire 1 ' reg_write_e_i $end
$var wire 1 ( reg_write_w_i $end
$var wire 32 ) result [31:0] $end
$var wire 5 * rs1_d_i [4:0] $end
$var wire 5 + rs2_d_i [4:0] $end
$var wire 1 # rst $end
$var wire 32 , write_data_e_i [31:0] $end
$var wire 32 - write_data_e_o [31:0] $end
$var wire 1 . stall_f $end
$var wire 1 / stall_d $end
$var wire 5 0 rs2_d_o [4:0] $end
$var wire 5 1 rs1_d_o [4:0] $end
$var wire 2 2 result_src_m_o [1:0] $end
$var wire 2 3 result_src_m_i [1:0] $end
$var wire 2 4 res_src_e_o [1:0] $end
$var wire 2 5 res_src_e_i [1:0] $end
$var wire 2 6 res_src_d_o [1:0] $end
$var wire 2 7 res_src_d_i [1:0] $end
$var wire 1 8 reg_write_m_o $end
$var wire 1 9 reg_write_m_i $end
$var wire 1 : reg_write_e_o $end
$var wire 1 ; reg_write_d_o $end
$var wire 1 < reg_write_d_i $end
$var wire 32 = read_data_m_o [31:0] $end
$var wire 32 > read_data_m_i [31:0] $end
$var wire 5 ? rd_m_o [4:0] $end
$var wire 5 @ rd_m_i [4:0] $end
$var wire 5 A rd_e_o [4:0] $end
$var wire 5 B rd_d_o [4:0] $end
$var wire 32 C rd2_d_o [31:0] $end
$var wire 32 D rd2_d_i [31:0] $end
$var wire 32 E rd1_d_o [31:0] $end
$var wire 32 F rd1_d_i [31:0] $end
$var wire 32 G pc_target_e_i [31:0] $end
$var wire 1 H pc_src_e_i $end
$var wire 32 I pc_plus4_m_o [31:0] $end
$var wire 32 J pc_plus4_m_i [31:0] $end
$var wire 32 K pc_plus4_f_o [31:0] $end
$var wire 32 L pc_plus4_f_i [31:0] $end
$var wire 32 M pc_plus4_e_o [31:0] $end
$var wire 32 N pc_plus4_e_i [31:0] $end
$var wire 32 O pc_plus4_d_o [31:0] $end
$var wire 32 P pc_plus4_d_i [31:0] $end
$var wire 32 Q pc_f_o [31:0] $end
$var wire 32 R pc_f_i [31:0] $end
$var wire 32 S pc_d_o [31:0] $end
$var wire 32 T pc_d_i [31:0] $end
$var wire 1 U mem_write_e_o $end
$var wire 1 V mem_write_e_i $end
$var wire 1 W mem_write_d_o $end
$var wire 1 X mem_write_d_i $end
$var wire 1 Y jump_d_o $end
$var wire 1 Z jump_d_i $end
$var wire 32 [ instr_f_o [31:0] $end
$var wire 32 \ instr_f_i [31:0] $end
$var wire 32 ] imm_val_d_o [31:0] $end
$var wire 32 ^ imm_val_d_i [31:0] $end
$var wire 3 _ funct3_e_o [2:0] $end
$var wire 3 ` funct3_e_i [2:0] $end
$var wire 3 a funct3_d_o [2:0] $end
$var wire 3 b funct3_d_i [2:0] $end
$var wire 2 c forward_b_e [1:0] $end
$var wire 2 d forward_a_e [1:0] $end
$var wire 1 e flush_e $end
$var wire 1 f flush_d $end
$var wire 1 g branch_d_o $end
$var wire 1 h branch_d_i $end
$var wire 1 i alu_src_b_d_o $end
$var wire 1 j alu_src_b_d_i $end
$var wire 1 k alu_src_a_d_o $end
$var wire 1 l alu_src_a_d_i $end
$var wire 32 m alu_result_w_i [31:0] $end
$var wire 32 n alu_result_m_o [31:0] $end
$var wire 32 o alu_result_m_i [31:0] $end
$var wire 32 p alu_result_e_o [31:0] $end
$var wire 32 q alu_result_e_i [31:0] $end
$var wire 4 r alu_control_d_o [3:0] $end
$var wire 4 s alu_control_d_i [3:0] $end
$var wire 1 t adder_src_d_o $end
$var wire 1 u adder_src_d_i $end
$scope module de $end
$var wire 1 " clk $end
$var wire 1 v clr $end
$var wire 1 w en $end
$var wire 5 x rd_d_i [4:0] $end
$var wire 5 y rs1_d_i [4:0] $end
$var wire 5 z rs2_d_i [4:0] $end
$var wire 2 { res_src_d_i [1:0] $end
$var wire 1 < reg_write_d_i $end
$var wire 32 | rd2_d_i [31:0] $end
$var wire 32 } rd1_d_i [31:0] $end
$var wire 32 ~ pc_plus4_d_i [31:0] $end
$var wire 32 !" pc_d_i [31:0] $end
$var wire 1 X mem_write_d_i $end
$var wire 1 Z jump_d_i $end
$var wire 32 "" imm_val_d_i [31:0] $end
$var wire 3 #" funct3_d_i [14:12] $end
$var wire 1 h branch_d_i $end
$var wire 1 j alu_src_b_d_i $end
$var wire 1 l alu_src_a_d_i $end
$var wire 4 $" alu_control_d_i [3:0] $end
$var wire 1 u adder_src_d_i $end
$var reg 1 t adder_src_d_o $end
$var reg 4 %" alu_control_d_o [3:0] $end
$var reg 1 k alu_src_a_d_o $end
$var reg 1 i alu_src_b_d_o $end
$var reg 1 g branch_d_o $end
$var reg 3 &" funct3_d_o [14:12] $end
$var reg 32 '" imm_val_d_o [31:0] $end
$var reg 1 Y jump_d_o $end
$var reg 1 W mem_write_d_o $end
$var reg 32 (" pc_d_o [31:0] $end
$var reg 32 )" pc_plus4_d_o [31:0] $end
$var reg 32 *" rd1_d_o [31:0] $end
$var reg 32 +" rd2_d_o [31:0] $end
$var reg 5 ," rd_d_o [4:0] $end
$var reg 1 ; reg_write_d_o $end
$var reg 2 -" res_src_d_o [1:0] $end
$var reg 5 ." rs1_d_o [4:0] $end
$var reg 5 /" rs2_d_o [4:0] $end
$upscope $end
$scope module decode_stage $end
$var wire 1 " clk $end
$var wire 32 0" pc_d [31:0] $end
$var wire 32 1" pc_plus4_d [31:0] $end
$var wire 5 2" rd_d [4:0] $end
$var wire 5 3" rd_w [4:0] $end
$var wire 1 ( reg_write_w $end
$var wire 5 4" rs1_d [4:0] $end
$var wire 5 5" rs2_d [4:0] $end
$var wire 32 6" result_w [31:0] $end
$var wire 2 7" res_src_d [1:0] $end
$var wire 1 < reg_write_d $end
$var wire 32 8" rd2_d [31:0] $end
$var wire 32 9" rd1_d [31:0] $end
$var wire 32 :" pc_plus4_f [31:0] $end
$var wire 32 ;" pc_f [31:0] $end
$var wire 1 X mem_write_d $end
$var wire 1 Z jump_d $end
$var wire 32 <" instr_f [31:0] $end
$var wire 32 =" imm_val_d [31:0] $end
$var wire 3 >" imm_src_d [2:0] $end
$var wire 3 ?" funct3_d [2:0] $end
$var wire 1 h branch_d $end
$var wire 1 j alu_src_b_d $end
$var wire 1 l alu_src_a_d $end
$var wire 4 @" alu_control_d [3:0] $end
$var wire 1 u adder_src_d $end
$scope module cu $end
$var wire 4 A" alu_control_d [3:0] $end
$var wire 3 B" funct3 [14:12] $end
$var wire 1 C" funct7b5 $end
$var wire 7 D" op [6:0] $end
$var wire 2 E" res_src_d [1:0] $end
$var wire 1 < reg_write_d $end
$var wire 1 X mem_write_d $end
$var wire 1 Z jump_d $end
$var wire 3 F" imm_src_d [2:0] $end
$var wire 1 h branch_d $end
$var wire 1 j alu_src_b_d $end
$var wire 1 l alu_src_a_d $end
$var wire 1 u adder_src_d $end
$var reg 4 G" alu_controls [3:0] $end
$var reg 12 H" controls [11:0] $end
$upscope $end
$scope module imex $end
$var wire 3 I" imm_type [2:0] $end
$var wire 25 J" instr [31:7] $end
$var reg 32 K" imm_val [31:0] $end
$upscope $end
$scope module rf $end
$var wire 5 L" a1 [4:0] $end
$var wire 5 M" a2 [4:0] $end
$var wire 5 N" a3 [4:0] $end
$var wire 1 " clk $end
$var wire 1 ( write_enable $end
$var wire 32 O" wd3 [31:0] $end
$var wire 32 P" rd2 [31:0] $end
$var wire 32 Q" rd1 [31:0] $end
$var integer 32 R" i [31:0] $end
$upscope $end
$upscope $end
$scope module em $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var wire 1 S" en $end
$var wire 5 T" rd_e_i [4:0] $end
$var wire 1 ' reg_write_e_i $end
$var wire 32 U" write_data_e_i [31:0] $end
$var wire 2 V" result_src_e_i [1:0] $end
$var wire 32 W" pc_plus4_e_i [31:0] $end
$var wire 1 V mem_write_e_i $end
$var wire 3 X" funct3_e_i [14:12] $end
$var wire 32 Y" alu_result_e_i [31:0] $end
$var reg 32 Z" alu_result_e_o [31:0] $end
$var reg 3 [" funct3_e_o [14:12] $end
$var reg 1 U mem_write_e_o $end
$var reg 32 \" pc_plus4_e_o [31:0] $end
$var reg 5 ]" rd_e_o [4:0] $end
$var reg 1 : reg_write_e_o $end
$var reg 2 ^" result_src_e_o [1:0] $end
$var reg 32 _" write_data_e_o [31:0] $end
$upscope $end
$scope module execute_stage $end
$var wire 1 t adder_src_d $end
$var wire 4 `" alu_control_d [3:0] $end
$var wire 1 k alu_src_a_d $end
$var wire 1 i alu_src_b_d $end
$var wire 1 g branch_d $end
$var wire 3 a" funct3_d [14:12] $end
$var wire 3 b" funct3_e [14:12] $end
$var wire 32 c" imm_val_d [31:0] $end
$var wire 1 Y jump_d $end
$var wire 1 W mem_write_d $end
$var wire 1 V mem_write_e $end
$var wire 32 d" pc_d [31:0] $end
$var wire 32 e" pc_plus4_d [31:0] $end
$var wire 32 f" pc_plus4_e [31:0] $end
$var wire 1 H pc_src_e $end
$var wire 32 g" rd1_d [31:0] $end
$var wire 32 h" rd2_d [31:0] $end
$var wire 5 i" rd_d [4:0] $end
$var wire 5 j" rd_e [4:0] $end
$var wire 1 ; reg_write_d $end
$var wire 1 ' reg_write_e $end
$var wire 2 k" res_src_d [1:0] $end
$var wire 2 l" res_src_e [1:0] $end
$var wire 5 m" rs1_d [4:0] $end
$var wire 5 n" rs2_d [4:0] $end
$var wire 32 o" write_data_e [31:0] $end
$var wire 32 p" pc_target_e [31:0] $end
$var wire 32 q" pc_adder_a [31:0] $end
$var wire 2 r" forward_b_e [1:0] $end
$var wire 2 s" forward_a_e [1:0] $end
$var wire 32 t" b_forward [31:0] $end
$var wire 32 u" b_alu [31:0] $end
$var wire 32 v" alu_result_w [31:0] $end
$var wire 32 w" alu_result_m [31:0] $end
$var wire 32 x" alu_result_e [31:0] $end
$var wire 32 y" a_forward [31:0] $end
$var wire 32 z" a_alu [31:0] $end
$scope module a_forward_mux $end
$var wire 32 {" in1 [31:0] $end
$var wire 2 |" sel [1:0] $end
$var wire 32 }" in3 [31:0] $end
$var wire 32 ~" in2 [31:0] $end
$var reg 32 !# out [31:0] $end
$upscope $end
$scope module a_src_mux $end
$var wire 32 "# in1 [31:0] $end
$var wire 32 ## in2 [31:0] $end
$var wire 1 k sel $end
$var wire 32 $# out [31:0] $end
$upscope $end
$scope module b_forward_mux $end
$var wire 32 %# in1 [31:0] $end
$var wire 2 &# sel [1:0] $end
$var wire 32 '# in3 [31:0] $end
$var wire 32 (# in2 [31:0] $end
$var reg 32 )# out [31:0] $end
$upscope $end
$scope module b_src_mux $end
$var wire 32 *# in1 [31:0] $end
$var wire 32 +# in2 [31:0] $end
$var wire 1 i sel $end
$var wire 32 ,# out [31:0] $end
$upscope $end
$scope module main_alu $end
$var wire 32 -# a [31:0] $end
$var wire 4 .# alu_controls [3:0] $end
$var wire 32 /# b [31:0] $end
$var wire 1 0# funct3b0 $end
$var reg 32 1# res [31:0] $end
$upscope $end
$scope module pc_target_adder $end
$var wire 32 2# b [31:0] $end
$var wire 32 3# res [31:0] $end
$var wire 32 4# a [31:0] $end
$upscope $end
$scope module pc_target_mux $end
$var wire 32 5# in1 [31:0] $end
$var wire 32 6# in2 [31:0] $end
$var wire 1 t sel $end
$var wire 32 7# out [31:0] $end
$upscope $end
$upscope $end
$scope module fd $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var wire 32 8# pc_plus4_f_i [31:0] $end
$var wire 32 9# pc_f_i [31:0] $end
$var wire 32 :# instr_f_i [31:0] $end
$var wire 1 . en $end
$var reg 32 ;# instr_f_o [31:0] $end
$var reg 32 <# pc_f_o [31:0] $end
$var reg 32 =# pc_plus4_f_o [31:0] $end
$upscope $end
$scope module fetch_stage $end
$var wire 1 " clk $end
$var wire 32 ># pc_f [31:0] $end
$var wire 32 ?# pc_plus4_f [31:0] $end
$var wire 1 H pc_src_e $end
$var wire 32 @# pc_target_e [31:0] $end
$var wire 1 # rst $end
$var wire 32 A# pc_plus4 [31:0] $end
$var wire 32 B# pc_mux_res [31:0] $end
$var wire 32 C# pc [31:0] $end
$var wire 32 D# instr_f [31:0] $end
$var wire 1 . en $end
$scope module i_mem $end
$var wire 32 E# instr [31:0] $end
$var wire 32 F# instr_addr [31:0] $end
$upscope $end
$scope module pc_ff $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 1 . en $end
$var wire 32 G# din [31:0] $end
$var reg 32 H# dout [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 I# in2 [31:0] $end
$var wire 1 H sel $end
$var wire 32 J# out [31:0] $end
$var wire 32 K# in1 [31:0] $end
$upscope $end
$scope module pc_plus4_adder $end
$var wire 32 L# a [31:0] $end
$var wire 32 M# b [31:0] $end
$var wire 32 N# res [31:0] $end
$upscope $end
$upscope $end
$scope module hazard_unit $end
$var wire 1 f flush_d $end
$var wire 1 e flush_e $end
$var wire 1 O# lw_stall $end
$var wire 1 H pc_src_e $end
$var wire 5 P# rd_e [4:0] $end
$var wire 5 Q# rd_m [4:0] $end
$var wire 1 : reg_write_m $end
$var wire 1 R# res_src_e_b0 $end
$var wire 5 S# rs1_d [4:0] $end
$var wire 5 T# rs1_e [4:0] $end
$var wire 5 U# rs2_d [4:0] $end
$var wire 5 V# rs2_e [4:0] $end
$var wire 1 W# rst $end
$var wire 1 / stall_d $end
$var wire 1 . stall_f $end
$var wire 1 8 reg_write_w $end
$var wire 5 X# rd_w [4:0] $end
$var wire 2 Y# forward_b_e [1:0] $end
$var wire 2 Z# forward_a_e [1:0] $end
$upscope $end
$scope module memory_stage $end
$var wire 32 [# alu_result_e [31:0] $end
$var wire 32 \# alu_result_m [31:0] $end
$var wire 1 " clk $end
$var wire 3 ]# funct3_e [14:12] $end
$var wire 1 U mem_write_e $end
$var wire 32 ^# pc_plus4_e [31:0] $end
$var wire 32 _# pc_plus4_m [31:0] $end
$var wire 5 `# rd_e [4:0] $end
$var wire 5 a# rd_m [4:0] $end
$var wire 1 : reg_write_e $end
$var wire 1 9 reg_write_m $end
$var wire 2 b# result_src_e [1:0] $end
$var wire 2 c# result_src_m [1:0] $end
$var wire 32 d# write_data_e [31:0] $end
$var wire 32 e# read_data_m [31:0] $end
$scope module dm $end
$var wire 1 " clk $end
$var wire 32 f# data_mem_addr [31:0] $end
$var wire 3 g# funct3 [14:12] $end
$var wire 1 U mem_write_e $end
$var wire 32 h# word [31:0] $end
$var wire 32 i# write_data_e [31:0] $end
$var wire 32 j# word_addr [31:0] $end
$var reg 32 k# read_data_m [31:0] $end
$var integer 32 l# i [31:0] $end
$upscope $end
$upscope $end
$scope module mw $end
$var wire 32 m# alu_result_m_i [31:0] $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var wire 1 n# en $end
$var wire 32 o# pc_plus4_m_i [31:0] $end
$var wire 5 p# rd_m_i [4:0] $end
$var wire 32 q# read_data_m_i [31:0] $end
$var wire 1 9 reg_write_m_i $end
$var wire 2 r# result_src_m_i [1:0] $end
$var reg 32 s# alu_result_m_o [31:0] $end
$var reg 32 t# pc_plus4_m_o [31:0] $end
$var reg 5 u# rd_m_o [4:0] $end
$var reg 32 v# read_data_m_o [31:0] $end
$var reg 1 8 reg_write_m_o $end
$var reg 2 w# result_src_m_o [1:0] $end
$upscope $end
$scope module writeback_stage $end
$var wire 32 x# alu_result_m [31:0] $end
$var wire 32 y# pc_plus4_m [31:0] $end
$var wire 5 z# rd_m [4:0] $end
$var wire 5 {# rd_w [4:0] $end
$var wire 32 |# read_data_m [31:0] $end
$var wire 1 8 reg_write_m $end
$var wire 1 ( reg_write_w $end
$var wire 2 }# result_src_m [1:0] $end
$var wire 32 ~# result_w [31:0] $end
$scope module result_mux $end
$var wire 32 !$ in1 [31:0] $end
$var wire 32 "$ in2 [31:0] $end
$var wire 32 #$ in3 [31:0] $end
$var wire 2 $$ sel [1:0] $end
$var reg 32 %$ out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bx |#
bz {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
0n#
bx m#
b1000000 l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
zW#
bx V#
bx U#
bx T#
bx S#
xR#
bx Q#
bx P#
xO#
b100 N#
b100 M#
b0 L#
b100 K#
bx J#
bx I#
b0 H#
bx G#
b0 F#
b100000000000010010011 E#
b100000000000010010011 D#
b0 C#
bx B#
b100 A#
bx @#
b100 ?#
b0 >#
bx =#
bx <#
bx ;#
b100000000000010010011 :#
b0 9#
b100 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
x0#
bx /#
bx .#
bx -#
bx ,#
bx +#
b0 *#
b0 )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
b0 "#
b0 !#
bx ~"
bx }"
bx |"
bx {"
bx z"
b0 y"
bx x"
bx w"
bx v"
bx u"
b0 t"
bx s"
bx r"
bx q"
bx p"
bz o"
bx n"
bx m"
bx l"
bx k"
bz j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bz U"
bz T"
0S"
b100000 R"
bx Q"
bx P"
bx O"
bz N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
xC"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bz 5"
bz 4"
bz 3"
bz 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bz z
bz y
bz x
0w
1v
xu
xt
bx s
bx r
bx q
bx p
bx o
bx n
bx m
xl
xk
xj
xi
xh
xg
xf
xe
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
b100000000000010010011 \
bx [
xZ
xY
xX
xW
xV
xU
bx T
bx S
b0 R
bx Q
bx P
bx O
bx N
bx M
b100 L
bx K
bx J
bx I
xH
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
x<
x;
x:
x9
x8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
x/
x.
bx -
bz ,
bz +
bz *
bx )
z(
x'
bz &
bz %
bz $
1#
0"
bx !
$end
#5
0e
b0 c
b0 r"
b0 &#
b0 Y#
b0 d
b0 s"
b0 |"
b0 Z#
b100 B#
b100 G#
b100 J#
b0 q
b0 Y"
b0 x"
b0 1#
0f
0H
0.
0/
0O#
b0 G
b0 p"
b0 3#
b0 @#
b0 I#
b0 q"
b0 4#
b0 7#
b0 z"
b0 $#
b0 -#
b0 u"
b0 ,#
b0 /#
0R#
b0 N
b0 W"
b0 f"
b0 O
b0 )"
b0 e"
b0 ]
b0 '"
b0 c"
b0 +#
b0 2#
b0 B
b0 ,"
b0 i"
b0 P#
b0 0
b0 /"
b0 n"
b0 V#
b0 1
b0 ."
b0 m"
b0 T#
b0 S
b0 ("
b0 d"
b0 ##
b0 5#
b0 C
b0 +"
b0 h"
b0 %#
b0 E
b0 *"
b0 g"
b0 {"
b0 6#
0t
0k
0i
b0 `
b0 X"
b0 b"
b0 a
b0 &"
b0 a"
b0 r
b0 %"
b0 `"
b0 .#
0g
0Y
0V
0W
b0 5
b0 V"
b0 l"
b0 6
b0 -"
b0 k"
0'
0;
bz @
bz a#
bz p#
bz A
bz ]"
bz Q#
bz `#
bz -
bz _"
bz d#
bz i#
0v
0#
1"
#10
0"
#15
b1 ^
b1 ""
b1 ="
b1 K"
xv
1<
b0 7
b0 {
b0 7"
b0 E"
0X
0Z
0h
0l
1j
0u
b0 >"
b0 F"
b0 I"
b0 >
b0 e#
b0 k#
b0 q#
b0x c
b0x r"
b0x &#
b0x Y#
b0x d
b0x s"
b0x |"
b0x Z#
xe
x.
x/
xO#
b0 D
b0 |
b0 8"
b0 P"
b0 F
b0 }
b0 9"
b0 Q"
b0 s
b0 $"
b0 @"
b0 A"
b0 G"
b100000010000 H"
b0 h#
b0 j#
b0 t"
b0 )#
b0 *#
b0 y"
b0 !#
b0 "#
bx q"
bx 4#
bx 7#
bx z"
bx $#
bx -#
bx u"
bx ,#
bx /#
xf
xH
xR#
b0 b
b0 #"
b0 ?"
b10000000000001 J"
b1 M"
b0 L"
0C"
b0 B"
b10011 D"
b1 U#
b0 S#
bx B#
bx G#
bx J#
b1000000000000000100010011 \
b1000000000000000100010011 :#
b1000000000000000100010011 D#
b1000000000000000100010011 E#
bz ?
bz X#
bz u#
bz z#
b0 J
b0 _#
b0 o#
b0 M
b0 \"
b0 ^#
b0 o
b0 w"
b0 ~"
b0 (#
b0 \#
b0 m#
b0 p
b0 Z"
b0 [#
b0 f#
b0 _
b0 ["
b0 ]#
b0 g#
b0 3
b0 c#
b0 r#
b0 4
b0 ^"
b0 b#
0U
09
0:
bx N
bx W"
bx f"
bx O
bx )"
bx e"
bx G
bx p"
bx 3#
bx @#
bx I#
bx ]
bx '"
bx c"
bx +#
bx 2#
bz B
bz ,"
bz i"
bz P#
bz 0
bz /"
bz n"
bz V#
bz 1
bz ."
bz m"
bz T#
bx S
bx ("
bx d"
bx ##
bx 5#
bx C
bx +"
bx h"
bx %#
bx E
bx *"
bx g"
bx {"
bx 6#
xt
xk
xi
bx `
bx X"
bx b"
bx a
bx &"
bx a"
bx r
bx %"
bx `"
bx .#
xg
xY
xV
xW
bx 5
bx V"
bx l"
bx 6
bx -"
bx k"
x'
x;
b100000000000010010011 [
b100000000000010010011 <"
b100000000000010010011 ;#
b100 P
b100 ~
b100 1"
b100 K
b100 :"
b100 =#
b0 T
b0 !"
b0 0"
b0 Q
b0 ;"
b0 <#
b1000 L
b1000 8#
b1000 ?#
b1000 A#
b1000 K#
b1000 N#
b100 R
b100 9#
b100 >#
b100 C#
b100 F#
b100 H#
b100 L#
1"
#20
0"
#25
0v
bx0 d
bx0 s"
bx0 |"
bx0 Z#
bx0 c
bx0 r"
bx0 &#
bx0 Y#
b1000 B#
b1000 G#
b1000 J#
0e
0.
0/
0O#
b1 G
b1 p"
b1 3#
b1 @#
b1 I#
b0 q"
b0 4#
b0 7#
b0 z"
b0 $#
b0 -#
b1 u"
b1 ,#
b1 /#
b1 q
b1 Y"
b1 x"
b1 1#
0f
0H
0R#
b0 !
b0 )
b0 m
b0 6"
b0 O"
b0 v"
b0 }"
b0 '#
b0 ~#
b0 %$
b100 N
b100 W"
b100 f"
b100 O
b100 )"
b100 e"
b1 ]
b1 '"
b1 c"
b1 +#
b1 2#
b0 S
b0 ("
b0 d"
b0 ##
b0 5#
b0 C
b0 +"
b0 h"
b0 %#
b0 E
b0 *"
b0 g"
b0 {"
b0 6#
0t
0k
1i
b0 `
b0 X"
b0 b"
b0 a
b0 &"
b0 a"
b0 r
b0 %"
b0 `"
b0 .#
0g
0Y
0V
0W
b0 5
b0 V"
b0 l"
b0 6
b0 -"
b0 k"
1'
1;
bx J
bx _#
bx o#
bx M
bx \"
bx ^#
bx _
bx ["
bx ]#
bx g#
bx 3
bx c#
bx r#
bx 4
bx ^"
bx b#
xU
x9
x:
b0 I
b0 t#
b0 y#
b0 #$
b0 =
b0 v#
b0 |#
b0 "$
b0 n
b0 s#
b0 x#
b0 !$
b0 2
b0 w#
b0 }#
b0 $$
08
1"
#30
0"
#35
bx c
bx r"
bx &#
bx Y#
bx d
bx s"
bx |"
bx Z#
b10000 ^
b10000 ""
b10000 ="
b10000 K"
b100000000000000010 J"
b10000 M"
b10000 U#
b1100 B#
b1100 G#
b1100 J#
b11111111110100000000000110010011 \
b11111111110100000000000110010011 :#
b11111111110100000000000110010011 D#
b11111111110100000000000110010011 E#
bx I
bx t#
bx y#
bx #$
bx 2
bx w#
bx }#
bx $$
x8
b100 J
b100 _#
b100 o#
b100 M
b100 \"
b100 ^#
b1 o
b1 w"
b1 ~"
b1 (#
b1 \#
b1 m#
b1 p
b1 Z"
b1 [#
b1 f#
b0 _
b0 ["
b0 ]#
b0 g#
b0 3
b0 c#
b0 r#
b0 4
b0 ^"
b0 b#
0U
19
1:
b1000000000000000100010011 [
b1000000000000000100010011 <"
b1000000000000000100010011 ;#
b1000 P
b1000 ~
b1000 1"
b1000 K
b1000 :"
b1000 =#
b100 T
b100 !"
b100 0"
b100 Q
b100 ;"
b100 <#
b1100 L
b1100 8#
b1100 ?#
b1100 A#
b1100 K#
b1100 N#
b1000 R
b1000 9#
b1000 >#
b1000 C#
b1000 F#
b1000 H#
b1000 L#
1"
#40
0"
#45
b11111111111111111111111111111101 ^
b11111111111111111111111111111101 ""
b11111111111111111111111111111101 ="
b11111111111111111111111111111101 K"
b10000 q
b10000 Y"
b10000 x"
b10000 1#
b1111111111010000000000011 J"
b11101 M"
1C"
b11101 U#
b10000 u"
b10000 ,#
b10000 /#
b100 q"
b100 4#
b100 7#
b1 !
b1 )
b1 m
b1 6"
b1 O"
b1 v"
b1 }"
b1 '#
b1 ~#
b1 %$
b10000 B#
b10000 G#
b10000 J#
b1000010011 \
b1000010011 :#
b1000010011 D#
b1000010011 E#
b11111111110100000000000110010011 [
b11111111110100000000000110010011 <"
b11111111110100000000000110010011 ;#
b1100 P
b1100 ~
b1100 1"
b1100 K
b1100 :"
b1100 =#
b1000 T
b1000 !"
b1000 0"
b1000 Q
b1000 ;"
b1000 <#
b1000 N
b1000 W"
b1000 f"
b1000 O
b1000 )"
b1000 e"
b10100 G
b10100 p"
b10100 3#
b10100 @#
b10100 I#
b10000 ]
b10000 '"
b10000 c"
b10000 +#
b10000 2#
b100 S
b100 ("
b100 d"
b100 ##
b100 5#
b100 I
b100 t#
b100 y#
b100 #$
b1 n
b1 s#
b1 x#
b1 !$
b0 2
b0 w#
b0 }#
b0 $$
18
b10000 L
b10000 8#
b10000 ?#
b10000 A#
b10000 K#
b10000 N#
b1100 R
b1100 9#
b1100 >#
b1100 C#
b1100 F#
b1100 H#
b1100 L#
1"
#50
0"
#55
b11111111111111111111111111111101 q
b11111111111111111111111111111101 Y"
b11111111111111111111111111111101 x"
b11111111111111111111111111111101 1#
b0 ^
b0 ""
b0 ="
b0 K"
b100 j#
b11111111111111111111111111111101 u"
b11111111111111111111111111111101 ,#
b11111111111111111111111111111101 /#
b1000 q"
b1000 4#
b1000 7#
b100 J"
b0 M"
0C"
b0 U#
b10100 B#
b10100 G#
b10100 J#
b110000011000001010010011 \
b110000011000001010010011 :#
b110000011000001010010011 D#
b110000011000001010010011 E#
b1000 J
b1000 _#
b1000 o#
b1000 M
b1000 \"
b1000 ^#
b10000 o
b10000 w"
b10000 ~"
b10000 (#
b10000 \#
b10000 m#
b10000 p
b10000 Z"
b10000 [#
b10000 f#
b1100 N
b1100 W"
b1100 f"
b1100 O
b1100 )"
b1100 e"
b101 G
b101 p"
b101 3#
b101 @#
b101 I#
b11111111111111111111111111111101 ]
b11111111111111111111111111111101 '"
b11111111111111111111111111111101 c"
b11111111111111111111111111111101 +#
b11111111111111111111111111111101 2#
b1000 S
b1000 ("
b1000 d"
b1000 ##
b1000 5#
b1000010011 [
b1000010011 <"
b1000010011 ;#
b10000 P
b10000 ~
b10000 1"
b10000 K
b10000 :"
b10000 =#
b1100 T
b1100 !"
b1100 0"
b1100 Q
b1100 ;"
b1100 <#
b10100 L
b10100 8#
b10100 ?#
b10100 A#
b10100 K#
b10100 N#
b10000 R
b10000 9#
b10000 >#
b10000 C#
b10000 F#
b10000 H#
b10000 L#
1"
#60
0"
#65
b1100 ^
b1100 ""
b1100 ="
b1100 K"
b0 q
b0 Y"
b0 x"
b0 1#
b11000001100000101 J"
b1100 M"
b11 L"
b1100 U#
b11 S#
b0 u"
b0 ,#
b0 /#
b1100 q"
b1100 4#
b1100 7#
b111111 j#
b10000 !
b10000 )
b10000 m
b10000 6"
b10000 O"
b10000 v"
b10000 }"
b10000 '#
b10000 ~#
b10000 %$
b11000 B#
b11000 G#
b11000 J#
b1000010001001100010011 \
b1000010001001100010011 :#
b1000010001001100010011 D#
b1000010001001100010011 E#
b110000011000001010010011 [
b110000011000001010010011 <"
b110000011000001010010011 ;#
b10100 P
b10100 ~
b10100 1"
b10100 K
b10100 :"
b10100 =#
b10000 T
b10000 !"
b10000 0"
b10000 Q
b10000 ;"
b10000 <#
b10000 N
b10000 W"
b10000 f"
b10000 O
b10000 )"
b10000 e"
b1100 G
b1100 p"
b1100 3#
b1100 @#
b1100 I#
b0 ]
b0 '"
b0 c"
b0 +#
b0 2#
b1100 S
b1100 ("
b1100 d"
b1100 ##
b1100 5#
b1100 J
b1100 _#
b1100 o#
b1100 M
b1100 \"
b1100 ^#
b11111111111111111111111111111101 o
b11111111111111111111111111111101 w"
b11111111111111111111111111111101 ~"
b11111111111111111111111111111101 (#
b11111111111111111111111111111101 \#
b11111111111111111111111111111101 m#
b11111111111111111111111111111101 p
b11111111111111111111111111111101 Z"
b11111111111111111111111111111101 [#
b11111111111111111111111111111101 f#
b1000 I
b1000 t#
b1000 y#
b1000 #$
b10000 n
b10000 s#
b10000 x#
b10000 !$
b11000 L
b11000 8#
b11000 ?#
b11000 A#
b11000 K#
b11000 N#
b10100 R
b10100 9#
b10100 >#
b10100 C#
b10100 F#
b10100 H#
b10100 L#
1"
#70
0"
#75
b1100 q
b1100 Y"
b1100 x"
b1100 1#
b10 ^
b10 ""
b10 ="
b10 K"
b10 s
b10 $"
b10 @"
b10 A"
b10 G"
b11111111111111111111111111111101 !
b11111111111111111111111111111101 )
b11111111111111111111111111111101 m
b11111111111111111111111111111101 6"
b11111111111111111111111111111101 O"
b11111111111111111111111111111101 v"
b11111111111111111111111111111101 }"
b11111111111111111111111111111101 '#
b11111111111111111111111111111101 ~#
b11111111111111111111111111111101 %$
b0 j#
b1100 u"
b1100 ,#
b1100 /#
b10000 q"
b10000 4#
b10000 7#
b1 b
b1 #"
b1 ?"
b100001000100110 J"
b10 M"
b10 L"
b1 B"
b10 U#
b10 S#
b11100 B#
b11100 G#
b11100 J#
b11111111000000010010001110010011 \
b11111111000000010010001110010011 :#
b11111111000000010010001110010011 D#
b11111111000000010010001110010011 E#
b1100 I
b1100 t#
b1100 y#
b1100 #$
b11111111111111111111111111111101 n
b11111111111111111111111111111101 s#
b11111111111111111111111111111101 x#
b11111111111111111111111111111101 !$
b10000 J
b10000 _#
b10000 o#
b10000 M
b10000 \"
b10000 ^#
b0 o
b0 w"
b0 ~"
b0 (#
b0 \#
b0 m#
b0 p
b0 Z"
b0 [#
b0 f#
b10100 N
b10100 W"
b10100 f"
b10100 O
b10100 )"
b10100 e"
b11100 G
b11100 p"
b11100 3#
b11100 @#
b11100 I#
b1100 ]
b1100 '"
b1100 c"
b1100 +#
b1100 2#
b10000 S
b10000 ("
b10000 d"
b10000 ##
b10000 5#
b1000010001001100010011 [
b1000010001001100010011 <"
b1000010001001100010011 ;#
b11000 P
b11000 ~
b11000 1"
b11000 K
b11000 :"
b11000 =#
b10100 T
b10100 !"
b10100 0"
b10100 Q
b10100 ;"
b10100 <#
b11100 L
b11100 8#
b11100 ?#
b11100 A#
b11100 K#
b11100 N#
b11000 R
b11000 9#
b11000 >#
b11000 C#
b11000 F#
b11000 H#
b11000 L#
1"
#80
0"
#85
b11111111111111111111111111110000 ^
b11111111111111111111111111110000 ""
b11111111111111111111111111110000 ="
b11111111111111111111111111110000 K"
b11 s
b11 $"
b11 @"
b11 A"
b11 G"
b10 b
b10 #"
b10 ?"
b1111111100000001001000111 J"
b10000 M"
1C"
b10 B"
b10000 U#
b10 u"
b10 ,#
b10 /#
b10100 q"
b10100 4#
b10100 7#
b0 q
b0 Y"
b0 x"
b0 1#
b11 j#
b0 !
b0 )
b0 m
b0 6"
b0 O"
b0 v"
b0 }"
b0 '#
b0 ~#
b0 %$
b100000 B#
b100000 G#
b100000 J#
b11111111000000010011010000010011 \
b11111111000000010011010000010011 :#
b11111111000000010011010000010011 D#
b11111111000000010011010000010011 E#
b11111111000000010010001110010011 [
b11111111000000010010001110010011 <"
b11111111000000010010001110010011 ;#
b11100 P
b11100 ~
b11100 1"
b11100 K
b11100 :"
b11100 =#
b11000 T
b11000 !"
b11000 0"
b11000 Q
b11000 ;"
b11000 <#
b11000 N
b11000 W"
b11000 f"
b11000 O
b11000 )"
b11000 e"
b10110 G
b10110 p"
b10110 3#
b10110 @#
b10110 I#
b10 ]
b10 '"
b10 c"
b10 +#
b10 2#
b10100 S
b10100 ("
b10100 d"
b10100 ##
b10100 5#
b1 `
b1 X"
b1 b"
b1 a
b1 &"
b1 a"
b10 r
b10 %"
b10 `"
b10 .#
b10100 J
b10100 _#
b10100 o#
b10100 M
b10100 \"
b10100 ^#
b1100 o
b1100 w"
b1100 ~"
b1100 (#
b1100 \#
b1100 m#
b1100 p
b1100 Z"
b1100 [#
b1100 f#
b10000 I
b10000 t#
b10000 y#
b10000 #$
b0 n
b0 s#
b0 x#
b0 !$
b100000 L
b100000 8#
b100000 ?#
b100000 A#
b100000 K#
b100000 N#
b11100 R
b11100 9#
b11100 >#
b11100 C#
b11100 F#
b11100 H#
b11100 L#
1"
#90
0"
#95
b100 s
b100 $"
b100 @"
b100 A"
b100 G"
b1100 !
b1100 )
b1100 m
b1100 6"
b1100 O"
b1100 v"
b1100 }"
b1100 '#
b1100 ~#
b1100 %$
b0 j#
b11111111111111111111111111110000 u"
b11111111111111111111111111110000 ,#
b11111111111111111111111111110000 /#
b11000 q"
b11000 4#
b11000 7#
b0 q
b0 Y"
b0 x"
b0 1#
b11 b
b11 #"
b11 ?"
b1111111100000001001101000 J"
b11 B"
b100100 B#
b100100 G#
b100100 J#
b1001000010100010010010011 \
b1001000010100010010010011 :#
b1001000010100010010010011 D#
b1001000010100010010010011 E#
b10100 I
b10100 t#
b10100 y#
b10100 #$
b1100 n
b1100 s#
b1100 x#
b1100 !$
b11000 J
b11000 _#
b11000 o#
b11000 M
b11000 \"
b11000 ^#
b0 o
b0 w"
b0 ~"
b0 (#
b0 \#
b0 m#
b0 p
b0 Z"
b0 [#
b0 f#
b1 _
b1 ["
b1 ]#
b1 g#
b11100 N
b11100 W"
b11100 f"
b11100 O
b11100 )"
b11100 e"
b1000 G
b1000 p"
b1000 3#
b1000 @#
b1000 I#
b11111111111111111111111111110000 ]
b11111111111111111111111111110000 '"
b11111111111111111111111111110000 c"
b11111111111111111111111111110000 +#
b11111111111111111111111111110000 2#
b11000 S
b11000 ("
b11000 d"
b11000 ##
b11000 5#
b10 `
b10 X"
b10 b"
b10 a
b10 &"
b10 a"
b11 r
b11 %"
b11 `"
b11 .#
b11111111000000010011010000010011 [
b11111111000000010011010000010011 <"
b11111111000000010011010000010011 ;#
b100000 P
b100000 ~
b100000 1"
b100000 K
b100000 :"
b100000 =#
b11100 T
b11100 !"
b11100 0"
b11100 Q
b11100 ;"
b11100 <#
b100100 L
b100100 8#
b100100 ?#
b100100 A#
b100100 K#
b100100 N#
b100000 R
b100000 9#
b100000 >#
b100000 C#
b100000 F#
b100000 H#
b100000 L#
1"
#100
0"
#105
b10010 ^
b10010 ""
b10010 ="
b10010 K"
b101 s
b101 $"
b101 @"
b101 A"
b101 G"
b100 b
b100 #"
b100 ?"
b100100001010001001 J"
b10010 M"
0C"
b100 B"
b10010 U#
b1100 G
b1100 p"
b1100 3#
b1100 @#
b1100 I#
b11100 q"
b11100 4#
b11100 7#
b1 q
b1 Y"
b1 x"
b1 1#
b0 !
b0 )
b0 m
b0 6"
b0 O"
b0 v"
b0 }"
b0 '#
b0 ~#
b0 %$
b101000 B#
b101000 G#
b101000 J#
b1100011101010100010011 \
b1100011101010100010011 :#
b1100011101010100010011 D#
b1100011101010100010011 E#
b1001000010100010010010011 [
b1001000010100010010010011 <"
b1001000010100010010010011 ;#
b100100 P
b100100 ~
b100100 1"
b100100 K
b100100 :"
b100100 =#
b100000 T
b100000 !"
b100000 0"
b100000 Q
b100000 ;"
b100000 <#
b100000 N
b100000 W"
b100000 f"
b100000 O
b100000 )"
b100000 e"
b11100 S
b11100 ("
b11100 d"
b11100 ##
b11100 5#
b11 `
b11 X"
b11 b"
b11 a
b11 &"
b11 a"
b100 r
b100 %"
b100 `"
b100 .#
b11100 J
b11100 _#
b11100 o#
b11100 M
b11100 \"
b11100 ^#
b10 _
b10 ["
b10 ]#
b10 g#
b11000 I
b11000 t#
b11000 y#
b11000 #$
b0 n
b0 s#
b0 x#
b0 !$
b101000 L
b101000 8#
b101000 ?#
b101000 A#
b101000 K#
b101000 N#
b100100 R
b100100 9#
b100100 >#
b100100 C#
b100100 F#
b100100 H#
b100100 L#
1"
